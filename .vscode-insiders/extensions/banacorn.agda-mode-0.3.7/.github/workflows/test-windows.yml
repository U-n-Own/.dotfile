# This is a basic workflow to help you get started with Actions

name: CI (Windows)

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: windows-latest
    steps:

    - name: üì• Checkout repository
      uses: actions/checkout@v2


    # things to be cached/restored:

    - name: üíæ Cache stack global package db
      id:   stack-global-package-db
      uses: actions/cache@v2
      with:
        path: C:\Users\runneradmin\AppData\Roaming\stack\
        key: ${{ runner.os }}-appdata-roaming-stack-${{ hashFiles('**.yaml') }}
        restore-keys: |
             ${{ runner.os }}-appdata-roaming-stack
    - name: üíæ Cache stack programs dir   # ghc, ghc-included packages and their haddocks, mingw, msys2
      id:   stack-programs-dir
      uses: actions/cache@v2
      with:
        path: C:\Users\runneradmin\AppData\Local\Programs\stack\
        # which files signal a change in stack's global db ?
        # **.yaml includes */package.yaml and stack.yaml* (too many), and hopefully no other changing yamls
        key: ${{ runner.os }}-appdata-local-programs-stack-${{ hashFiles('**.yaml') }}
        restore-keys: |
             ${{ runner.os }}-appdata-local-programs-stack
    - name: üíæ Cache .stack-work
      uses: actions/cache@v2
      with:
        path: .stack-work
        key: ${{ runner.os }}-stack-work-${{ hashFiles('**.yaml') }}
        restore-keys: |
             ${{ runner.os }}-stack-work

    # actions:

    - name: ‚è¨ Install Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 10.x

    - name: ‚è¨ Install stack
      #if: steps.stack-programs-dir.outputs.cache-hit != 'true'
      # this step is needed to get stack.exe into PATH, for now
      run: |
        curl -sL https://get.haskellstack.org/stable/windows-x86_64.zip -o stack.zip
        7z x stack.zip stack.exe
        which stack
        stack --version
        which ./stack
        ./stack --version
      # must avoid GHC versions broken on windows such as 8.8.3 with https://gitlab.haskell.org/ghc/ghc/issues/17926
      # current default stack.yaml uses GHC 8.8.4 which hopefully is ok

    - name: ‚è¨ Install Agda
      run: stack install Agda-2.6.2

    - name: ‚è¨ Install NPM Dependencies
      run: npm install
      
    - name: üî® Build stuff 
      run: npm run build

    - name: üöó Run tests (Windows)
      run: | 
        # move (stack path --local-bin) to somewhere in the PATH 
        cp C:\Users\runneradmin\AppData\Roaming\local\bin\agda.exe C:\Rust\.cargo\bin
        which agda
        npm test
